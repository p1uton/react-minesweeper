{"version":3,"sources":["functions.js","Cell.js","App.js","serviceWorker.js","index.js"],"names":["isNext","cell1","cell2","dc","Math","abs","col","dr","row","getCell","currentCells","id","filter","cell","shift","checkStatus","status","isOpen","isMine","length","count1","isFlag","count2","initialCells","rows","cols","mines","cells","r","c","push","isMouseDown","minesNext","minesLeft","rand","floor","random","map","Cell","onClick","onMouseDown","onMouseUp","classes","className","join","event","onContextMenu","levels","name","App","useState","level","setLevel","setStatus","timer","setTimer","setCells","useEffect","interval","setInterval","value","clearInterval","handleCellClick","isRightClick","preventDefault","concat","currentCell","flagCell","countFlagsNext","openCell","handleCellMouseDown","handleCellMouseUp","resetGame","newLevel","style","width","handleResetClick","height","key","item","type","handleLevelClick","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.af49ce73.chunk.js","sourcesContent":["export const isNext = (cell1, cell2) => {\r\n  let dc = Math.abs(cell1.col - cell2.col);\r\n  let dr = Math.abs(cell1.row - cell2.row);\r\n  return (dc === 1 && dr === 1) || (dc === 0 && dr === 1) || (dc === 1 && dr === 0);\r\n};\r\n\r\nexport const getCell = (currentCells, id) => {\r\n  return currentCells.filter(cell => cell.id === id).shift();\r\n};\r\n\r\nexport const checkStatus = (currentCells, status) => {\r\n  if (0 !== currentCells.filter(cell => cell.isOpen && cell.isMine).length) {\r\n    return 3;\r\n  } else {\r\n    const count1 = currentCells.filter(cell => cell.isMine && !cell.isFlag).length;\r\n    const count2 = currentCells.filter(cell => !cell.isMine && !cell.isOpen).length;\r\n    if ((0 === count1) && (0 === count2)) {\r\n      return 2;\r\n    } else {\r\n      return status;\r\n    }\r\n  }\r\n};\r\n\r\nexport const countFlagsNext = (currentCells, id) => {\r\n  const currentCell = getCell(currentCells, id);\r\n  return currentCells.filter(cell => isNext(cell, currentCell) && cell.isFlag).length;\r\n};\r\n\r\nexport const initialCells = ({rows, cols, mines}) => {\r\n  let cells = [];\r\n\r\n  for (let r = 0; r < rows; r++) {\r\n    for (let c = 0; c < cols; c++) {\r\n      cells.push({\r\n        id: r * cols + c,\r\n        row: r,\r\n        col: c,\r\n        isOpen: false,\r\n        isMine: false,\r\n        isFlag: false,\r\n        isMouseDown: false,\r\n        minesNext: 0,\r\n      });\r\n    }\r\n  }\r\n\r\n  let minesLeft = mines;\r\n\r\n  while (minesLeft > 0) {\r\n    let rand = Math.floor(Math.random() * cells.length);\r\n    if (!cells[rand].isMine) {\r\n      cells[rand].isMine = true;\r\n      minesLeft--;\r\n    }\r\n  }\r\n\r\n  cells.map(cell => {\r\n    cell.minesNext = cells.filter(cell2 => isNext(cell, cell2) && cell2.isMine).length;\r\n    return cell;\r\n  });\r\n\r\n  return cells;\r\n};\r\n","import React from 'react';\r\n\r\nexport const Cell = ({cell, status, onClick, onMouseDown, onMouseUp}) => {\r\n  let classes = ['cell'];\r\n\r\n  if (0 === status) {\r\n    classes.push('cell-closed');\r\n  } else if (!cell.isOpen) {\r\n    if (cell.isFlag) {\r\n      if (1 === status) {\r\n        classes.push('cell-closed', 'cell-flag', 'cell-flag-red');\r\n      } else if ((2 === status) || (3 === status)) {\r\n        if (cell.isMine) {\r\n          classes.push('cell-closed', 'cell-flag', 'cell-flag-green');\r\n        } else {\r\n          classes.push('cell-closed', 'cell-flag', 'cell-flag-gray');\r\n        }\r\n      }\r\n    } else if (cell.isMine) {\r\n      if (3 === status) {\r\n        classes.push('cell-mine');\r\n      } else {\r\n        if (!cell.isMouseDown) {\r\n          classes.push('cell-closed');\r\n        }\r\n      }\r\n    } else {\r\n      if (!cell.isMouseDown) {\r\n        classes.push('cell-closed');\r\n      }\r\n    }\r\n  } else {\r\n    if (cell.isMine) {\r\n      classes.push('cell-mine', 'cell-detonated');\r\n    } else if (0 !== cell.minesNext) {\r\n      classes.push('cell-' + cell.minesNext);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={classes.join(' ')}\r\n      onClick={event => onClick(event, cell.id, false)}\r\n      onContextMenu={event => onClick(event, cell.id, true)}\r\n      onMouseDown={event => onMouseDown(event, cell.id)}\r\n      onMouseUp={event => onMouseUp(event, cell.id)}\r\n    />\r\n  );\r\n};\r\n","import React, {useState, useEffect} from 'react';\nimport {isNext, getCell, checkStatus, countFlagsNext, initialCells} from './functions';\nimport {Cell} from './Cell';\n\n// const rows = 16;\n// const cols = 30;\n// const minesCount = 99;\n\nconst levels = [\n  {\n    id: 0,\n    name: 'Beginner',\n    rows: 8,\n    cols: 8,\n    mines: 10,\n  },\n  {\n    id: 1,\n    name: 'Intermediate',\n    rows: 16,\n    cols: 16,\n    mines: 40,\n  },\n  {\n    id: 2,\n    name: 'Expert',\n    rows: 16,\n    cols: 30,\n    mines: 99,\n  },\n];\n\n\nfunction App() {\n\n  const [level, setLevel] = useState(() => 1);\n  const [status, setStatus] = useState(() => 0);\n  const [timer, setTimer] = useState(() => 0);\n  const [cells, setCells] = useState(() => initialCells(levels[level]));\n\n\n  useEffect(() => {\n    if (1 === status) {\n      const interval = setInterval(() => {\n        setTimer(value => value + 1);\n      }, 1000);\n      return () => clearInterval(interval);\n    }\n  }, [status]);\n\n\n  const handleCellClick = (event, id, isRightClick) => {\n    event.preventDefault();\n\n    if ((2 === status) || (3 === status)) {\n      return;\n    }\n\n    if (0 === status) {\n      setStatus(1);\n    }\n\n    let currentCells = cells.concat();\n\n    const currentCell = getCell(currentCells, id);\n\n    if (isRightClick) {\n      if (!currentCell.isOpen) {\n        flagCell(currentCells, id);\n      }\n    } else {\n      if (!currentCell.isFlag) {\n        if (!currentCell.isOpen) {\n          openCell(currentCells, id);\n        } else {\n          if (currentCell.minesNext === countFlagsNext(currentCells, id)) {\n            currentCells\n              .filter(cell => isNext(cell, currentCell) && !cell.isOpen && !cell.isFlag && cell.isMine)\n              .map(cell => openCell(currentCells, cell.id));\n            if (3 !== checkStatus(currentCells, status)) {\n              currentCells\n                .filter(cell => isNext(cell, currentCell) && !cell.isOpen && !cell.isFlag)\n                .map(cell => openCell(currentCells, cell.id));\n            }\n          }\n        }\n      }\n    }\n\n    setCells(currentCells);\n\n    setStatus(status => checkStatus(currentCells, status));\n  };\n\n\n  const handleCellMouseDown = (event, id) => {\n    event.preventDefault();\n    // console.log('handleCellMouseDown', id);\n\n    let currentCells = cells.concat();\n    const currentCell = getCell(currentCells, id);\n\n    if (currentCell.isOpen) {\n      currentCells\n        .filter(cell => isNext(cell, currentCell) && !cell.isOpen && !cell.isFlag)\n        .map(cell => cell.isMouseDown = true);\n\n      setCells(currentCells);\n    }\n  };\n\n\n  const handleCellMouseUp = (event, id) => {\n    event.preventDefault();\n    // console.log('handleCellMouseUp', id);\n\n    let currentCells = cells.concat();\n    const currentCell = getCell(currentCells, id);\n\n    if (currentCell.isOpen) {\n      currentCells\n        .filter(cell => isNext(cell, currentCell) && !cell.isOpen && !cell.isFlag)\n        .map(cell => cell.isMouseDown = false);\n\n      setCells(currentCells);\n    }\n  };\n\n\n  const flagCell = (currentCells, id) => {\n    currentCells.map(cell => cell.id === id ? cell.isFlag = !cell.isFlag : null);\n  };\n\n\n  const openCell = (currentCells, id) => {\n    currentCells.map(cell => cell.id === id ? cell.isOpen = true : null);\n\n    const currentCell = getCell(currentCells, id);\n    if (!currentCell.isMine && (0 === currentCell.minesNext)) {\n      currentCells\n        .filter(cell => isNext(cell, currentCell) && !cell.isOpen && !cell.isFlag)\n        .map(cell => openCell(currentCells, cell.id));\n    }\n  };\n\n\n  const handleResetClick = event => {\n    event.preventDefault();\n    resetGame(level);\n  };\n\n\n  const resetGame = newLevel => {\n    setLevel(newLevel);\n    setStatus(0);\n    setTimer(0);\n    setCells(initialCells(levels[newLevel]));\n  };\n\n\n  const handleLevelClick = (event, newLevel) => {\n    event.preventDefault();\n    resetGame(newLevel);\n  };\n\n\n  return (\n    <div>\n      <div className=\"container\" style={{width: levels[level].cols*20}}>\n        <div className=\"topbar\">\n          <div className=\"topbar-block\">\n            {cells.filter(cell => cell.isMine).length - cells.filter(cell => cell.isFlag).length}\n          </div>\n          <div className={'status status' + status} onClick={event => handleResetClick(event)}>\n          </div>\n          <div className=\"topbar-block\">\n            {timer}\n          </div>\n        </div>\n        <div className=\"field\" style={{width: levels[level].cols*20, height: levels[level].rows*20}}>\n          {cells.map(cell => <Cell\n            key={cell.id}\n            cell={cell}\n            status={status}\n            onClick={handleCellClick}\n            onMouseDown={handleCellMouseDown}\n            onMouseUp={handleCellMouseUp}\n          />)}\n        </div>\n        <div className=\"bottombar\">\n          {levels.map(item => <input\n            type=\"button\"\n            value={item.name}\n            onClick={event => handleLevelClick(event, item.id)}\n            key={item.id}\n          />)}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}