{"version":3,"sources":["components/Cell/Cell.module.css","components/Status/Status.module.css","components/Field/Field.module.css","components/App/App.module.css","components/LevelSelector/LevelSelector.module.css","components/Timer/Timer.module.css","components/Counter/Counter.module.css","components/TopBar/TopBar.module.css","consts.js","actions.js","functions.js","components/LevelSelector/LevelSelector.js","components/Timer/Timer.js","components/Counter/Counter.js","components/Status/Status.js","components/TopBar/TopBar.js","components/Cell/Cell.js","components/Field/Field.js","components/App/App.js","serviceWorker.js","index.js","reducers/rootReducer.js"],"names":["module","exports","LEVELS","id","name","rows","cols","mines","setStatusAction","status","type","payload","resetGameAction","level","openCellsAction","pressCellsAction","initialCells","cells","r","c","push","row","col","isOpen","isMine","isFlag","isPressed","minesNext","minesLeft","rand","Math","floor","random","length","map","cell","filter","cell2","isNext","cell1","dc","abs","dr","getCell","currentCells","shift","countFlagsNext","currentCell","findNextCells","foundCells","isSearchTree","resultCells","indexOf","forEach","LevelSelector","dispatch","useDispatch","changeLevelHandler","localStorage","setItem","saveLevel","className","classes","item","value","onClick","key","Timer","useSelector","state","useState","timer","setTimer","useEffect","interval","setInterval","clearInterval","Counter","Status","cls","join","TopBar","Cell","onCellMouseDown","onCellMouseUp","onCellClick","closed","mine","detonated","flag","red","green","gray","onMouseDown","event","onMouseUp","onContextMenu","Field","preventDefault","button","flagCellAction","newStatus","count1","count2","checkStatus","App","container","Boolean","window","location","hostname","match","store","createStore","action","savedLevel","getItem","initialState","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.7ccc0d23.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Cell\":\"Cell_Cell__3a2AI\",\"closed\":\"Cell_closed__1Vnz5\",\"detonated\":\"Cell_detonated__3a9rG\",\"mine\":\"Cell_mine__3rqDz\",\"flag\":\"Cell_flag__2UxyW\",\"red\":\"Cell_red__1AnuW\",\"green\":\"Cell_green__3-pnt\",\"gray\":\"Cell_gray__2e-41\",\"count-1\":\"Cell_count-1__w15rZ\",\"count-2\":\"Cell_count-2___KyXA\",\"count-3\":\"Cell_count-3__3gyIk\",\"count-4\":\"Cell_count-4__3iwcL\",\"count-5\":\"Cell_count-5__3PKEA\",\"count-6\":\"Cell_count-6__1JEC4\",\"count-7\":\"Cell_count-7__1mztp\",\"count-8\":\"Cell_count-8__3Pbsz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Status\":\"Status_Status__3LbjR\",\"Status-0\":\"Status_Status-0__20QTR\",\"Status-1\":\"Status_Status-1__3d6-3\",\"Status-2\":\"Status_Status-2__1cT-k\",\"Status-3\":\"Status_Status-3__3jJ5k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Field\":\"Field_Field__J5WFY\",\"Field-0\":\"Field_Field-0__1QInY\",\"Field-1\":\"Field_Field-1__QMBQ8\",\"Field-2\":\"Field_Field-2__tpg8R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1m-2P\",\"container-0\":\"App_container-0__16Oew\",\"container-1\":\"App_container-1__FUxMw\",\"container-2\":\"App_container-2__Gzgk_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LevelSelector\":\"LevelSelector_LevelSelector__2V93N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Timer\":\"Timer_Timer__3HMJo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Counter\":\"Counter_Counter__3sKWP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TopBar\":\"TopBar_TopBar__1hGHN\"};","export const LEVELS = [\r\n  {\r\n    id: 0,\r\n    name: 'Beginner',\r\n    rows: 8,\r\n    cols: 8,\r\n    mines: 10,\r\n  },\r\n  {\r\n    id: 1,\r\n    name: 'Intermediate',\r\n    rows: 16,\r\n    cols: 16,\r\n    mines: 40,\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Expert',\r\n    rows: 16,\r\n    cols: 30,\r\n    mines: 99,\r\n  },\r\n];\r\n\r\nexport const SET_STATUS = 'SET_STATUS';\r\nexport const RESET_GAME = 'RESET_GAME';\r\nexport const FLAG_CELL = 'FLAG_CELL';\r\nexport const OPEN_CELLS = 'OPEN_CELLS';\r\nexport const PRESS_CELLS = 'PRESS_CELLS';\r\n\r\nexport const STATUS_NEW = 0;\r\nexport const STATUS_PLAY = 1;\r\nexport const STATUS_WIN = 2;\r\nexport const STATUS_LOST = 3;\r\n","import { FLAG_CELL, OPEN_CELLS, PRESS_CELLS, RESET_GAME, SET_STATUS } from './consts';\r\n\r\nexport const setStatusAction = status => {\r\n  return {\r\n    type: SET_STATUS,\r\n    payload: status,\r\n  };\r\n};\r\n\r\nexport const resetGameAction = level => {\r\n  return {\r\n    type: RESET_GAME,\r\n    payload: level,\r\n  };\r\n};\r\n\r\nexport const flagCellAction = id => {\r\n  return {\r\n    type: FLAG_CELL,\r\n    payload: id,\r\n  };\r\n};\r\n\r\nexport const openCellsAction = id => {\r\n  return {\r\n    type: OPEN_CELLS,\r\n    payload: id,\r\n  };\r\n};\r\n\r\nexport const pressCellsAction = id => {\r\n  return {\r\n    type: PRESS_CELLS,\r\n    payload: id,\r\n  };\r\n};","import { LEVELS, STATUS_LOST, STATUS_NEW, STATUS_WIN } from \"./consts\";\r\n\r\nexport const initialCells = ({ rows, cols, mines }) => {\r\n  let cells = [];\r\n\r\n  for (let r = 0; r < rows; r++) {\r\n    for (let c = 0; c < cols; c++) {\r\n      cells.push({\r\n        id: r * cols + c,\r\n        row: r,\r\n        col: c,\r\n        isOpen: false,\r\n        isMine: false,\r\n        isFlag: false,\r\n        isPressed: false,\r\n        minesNext: 0,\r\n      });\r\n    }\r\n  }\r\n\r\n  let minesLeft = mines;\r\n\r\n  while (minesLeft > 0) {\r\n    let rand = Math.floor(Math.random() * cells.length);\r\n    if (!cells[rand].isMine) {\r\n      cells[rand].isMine = true;\r\n      minesLeft--;\r\n    }\r\n  }\r\n\r\n  cells.map(cell => {\r\n    cell.minesNext = cells.filter(cell2 => isNext(cell, cell2) && cell2.isMine).length;\r\n    return cell;\r\n  });\r\n\r\n  return cells;\r\n};\r\n\r\n\r\nexport const isNext = (cell1, cell2) => {\r\n  const dc = Math.abs(cell1.col - cell2.col);\r\n  const dr = Math.abs(cell1.row - cell2.row);\r\n  return (dc === 1 && dr === 1) || (dc === 0 && dr === 1) || (dc === 1 && dr === 0);\r\n};\r\n\r\n\r\nexport const getCell = (currentCells, id) => {\r\n  return currentCells.filter(cell => cell.id === id).shift();\r\n};\r\n\r\n\r\nexport const checkStatus = (currentCells) => {\r\n  if (0 !== currentCells.filter(cell => cell.isOpen && cell.isMine).length) {\r\n    return STATUS_LOST;\r\n  } else {\r\n    const count1 = currentCells.filter(cell => cell.isMine && !cell.isFlag).length;\r\n    const count2 = currentCells.filter(cell => !cell.isMine && !cell.isOpen).length;\r\n    if ((0 === count1) && (0 === count2)) {\r\n      return STATUS_WIN;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n};\r\n\r\n\r\nexport const countFlagsNext = (currentCells, id) => {\r\n  const currentCell = getCell(currentCells, id);\r\n  return currentCells.filter(cell => isNext(cell, currentCell) && cell.isFlag).length;\r\n};\r\n\r\n\r\nexport const findNextCells = (currentCells, id, foundCells, isSearchTree) => {\r\n  const currentCell = getCell(currentCells, id);\r\n\r\n  const resultCells = currentCells.filter(\r\n    cell => isNext(cell, currentCell)\r\n      &&\r\n      !cell.isOpen\r\n      &&\r\n      !cell.isFlag\r\n      &&\r\n      -1 === foundCells.indexOf(cell.id)\r\n  );\r\n\r\n  resultCells.forEach(cell => {\r\n    foundCells.push(cell.id);\r\n  });\r\n\r\n  if (isSearchTree) {\r\n    resultCells\r\n      .filter(cell => (0 === cell.minesNext))\r\n      .forEach(cell => findNextCells(currentCells, cell.id, foundCells, isSearchTree)\r\n        .forEach(cell => resultCells.push(cell))\r\n      );\r\n  }\r\n\r\n  return resultCells;\r\n};\r\n\r\n\r\nexport const loadLevel = () => {\r\n  try {\r\n    return localStorage.getItem('level');\r\n  } catch {\r\n    return null;\r\n  }\r\n};\r\n\r\n\r\nexport const saveLevel = level => {\r\n  try {\r\n    localStorage.setItem('level', level);\r\n  } catch {\r\n  }\r\n};\r\n\r\n\r\nexport const initialState = () => {\r\n  const savedLevel = localStorage.getItem('level');\r\n  return {\r\n    level: savedLevel,\r\n    status: STATUS_NEW,\r\n    cells: initialCells(LEVELS[savedLevel]),\r\n  };\r\n};","import React from 'react';\r\nimport { LEVELS } from '../../consts';\r\nimport { useDispatch } from 'react-redux';\r\nimport { resetGameAction } from '../../actions';\r\nimport classes from './LevelSelector.module.css';\r\nimport { saveLevel } from '../../functions';\r\n\r\nexport const LevelSelector = () => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const changeLevelHandler = level => {\r\n    dispatch(resetGameAction(level));\r\n    saveLevel(level);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.LevelSelector}>\r\n      {\r\n        LEVELS.map(item => <input\r\n          type=\"button\"\r\n          value={item.name}\r\n          onClick={() => changeLevelHandler(item.id)}\r\n          key={item.id}\r\n        />)\r\n      }\r\n    </div>\r\n  );\r\n\r\n};","import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { STATUS_NEW, STATUS_PLAY } from '../../consts';\r\nimport classes from './Timer.module.css';\r\n\r\nexport const Timer = () => {\r\n\r\n  const status = useSelector(state => state.status);\r\n\r\n  const [timer, setTimer] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (STATUS_NEW === status) {\r\n      setTimer(0);\r\n    } else if (STATUS_PLAY === status) {\r\n      const interval = setInterval(() => {\r\n        setTimer(value => value + 1);\r\n      }, 1000);\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [status]);\r\n\r\n  return (\r\n    <div className={classes.Timer}>\r\n      {timer}\r\n    </div>\r\n  );\r\n};","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport classes from './Counter.module.css';\r\n\r\nexport const Counter = () => {\r\n\r\n  const cells = useSelector(state => state.cells);\r\n\r\n  return (\r\n    <div className={classes.Counter}>\r\n      {cells.filter(cell => cell.isMine).length - cells.filter(cell => cell.isFlag).length}\r\n    </div>\r\n  );\r\n  \r\n};","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { resetGameAction } from '../../actions';\r\nimport classes from './Status.module.css';\r\n\r\nexport const Status = () => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const status = useSelector(state => state.status);\r\n  const level = useSelector(state => state.level);\r\n\r\n  const cls = [classes.Status, classes['Status-' + status]];\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        className={cls.join(' ')}\r\n        onClick={() => dispatch(resetGameAction(level))}\r\n      />\r\n    </div>\r\n  );\r\n\r\n};","import React from 'react';\r\nimport { Timer } from '../Timer/Timer';\r\nimport { Counter } from '../Counter/Counter';\r\nimport { Status } from '../Status/Status';\r\nimport classes from './TopBar.module.css';\r\n\r\nexport const TopBar = () => {\r\n  return (\r\n    <div className={classes.TopBar}>\r\n      <Counter />\r\n      <Status />\r\n      <Timer />\r\n    </div>\r\n  );\r\n};","import React from 'react';\r\nimport { STATUS_NEW, STATUS_PLAY, STATUS_WIN, STATUS_LOST } from '../../consts';\r\nimport classes from './Cell.module.css';\r\n\r\nexport const Cell = ({ cell, status, onCellMouseDown, onCellMouseUp, onCellClick }) => {\r\n  let cls = [classes.Cell];\r\n\r\n  if (STATUS_NEW === status) {\r\n    cls.push(classes.closed);\r\n  } else if (!cell.isOpen) {\r\n    if (cell.isFlag) {\r\n      if (STATUS_PLAY === status) {\r\n        cls.push(classes.closed, classes.flag, classes.red);\r\n      } else if ((STATUS_WIN === status) || (STATUS_LOST === status)) {\r\n        if (cell.isMine) {\r\n          cls.push(classes.closed, classes.flag, classes.green);\r\n        } else {\r\n          cls.push(classes.closed, classes.flag, classes.gray);\r\n        }\r\n      }\r\n    } else if (cell.isMine) {\r\n      if (STATUS_LOST === status) {\r\n        cls.push(classes.mine);\r\n      } else {\r\n        if (!cell.isPressed) {\r\n          cls.push(classes.closed);\r\n        }\r\n      }\r\n    } else {\r\n      if (!cell.isPressed) {\r\n        cls.push(classes.closed);\r\n      }\r\n    }\r\n  } else {\r\n    if (cell.isMine) {\r\n      cls.push(classes.mine, classes.detonated);\r\n    } else if (0 !== cell.minesNext) {\r\n      cls.push(classes['count-' + cell.minesNext]);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={cls.join(' ')}\r\n      onMouseDown={event => onCellMouseDown(event, cell.id)}\r\n      onMouseUp={event => onCellMouseUp(event, cell.id)}\r\n      onClick={event => onCellClick(event, cell.id)}\r\n      onContextMenu={event => onCellClick(event, cell.id)}\r\n    />\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { STATUS_NEW, STATUS_PLAY, STATUS_WIN, STATUS_LOST } from '../../consts';\r\nimport { Cell } from '../../components/Cell/Cell';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { flagCellAction, openCellsAction, pressCellsAction, setStatusAction } from '../../actions';\r\nimport { getCell, findNextCells, countFlagsNext, checkStatus } from '../../functions';\r\nimport classes from './Field.module.css';\r\n\r\nexport const Field = () => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const level = useSelector(state => state.level);\r\n  const cells = useSelector(state => state.cells);\r\n  const status = useSelector(state => state.status);\r\n\r\n  const onCellMouseDown = (event, id) => {\r\n    event.preventDefault();\r\n\r\n    if (STATUS_NEW === status) {\r\n      dispatch(setStatusAction(STATUS_PLAY));\r\n    }\r\n\r\n    if ((STATUS_WIN === status) || (STATUS_LOST === status)) {\r\n      return;\r\n    }\r\n\r\n    const currentCell = getCell(cells, id);\r\n\r\n    if (2 === event.button) {\r\n      if (!currentCell.isOpen) {\r\n        dispatch(flagCellAction(id));\r\n      }\r\n    } else {\r\n      if (!currentCell.isOpen) {\r\n        if (!currentCell.isFlag) {\r\n          dispatch(pressCellsAction([id]));\r\n        }\r\n      } else {\r\n        dispatch(pressCellsAction(findNextCells(cells, id, [], false).map(cell => cell.id)));\r\n      }\r\n    }\r\n  }\r\n\r\n  const onCellMouseUp = (event, id) => {\r\n    event.preventDefault();\r\n\r\n    if ((STATUS_WIN === status) || (STATUS_LOST === status)) {\r\n      return;\r\n    }\r\n\r\n    const currentCell = getCell(cells, id);\r\n\r\n    if (2 === event.button) {\r\n\r\n    } else {\r\n      if (!currentCell.isOpen) {\r\n        if (!currentCell.isFlag) {\r\n          dispatch(openCellsAction([id]));\r\n          if (currentCell.isMine) {\r\n            dispatch(setStatusAction(STATUS_LOST));\r\n          } else {\r\n            if ((countFlagsNext(cells, id) === currentCell.minesNext) || (0 === currentCell.minesNext)) {\r\n              dispatch(openCellsAction(findNextCells(cells, id, [], true).map(cell => cell.id)));\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        dispatch(pressCellsAction(findNextCells(cells, id, [], false).map(cell => cell.id)));\r\n        if (countFlagsNext(cells, id) === currentCell.minesNext) {\r\n          dispatch(openCellsAction(findNextCells(cells, id, [], true).map(cell => cell.id)));\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  const onCellClick = (event, id) => {\r\n    event.preventDefault();\r\n\r\n    const newStatus = checkStatus(cells);\r\n\r\n    if (null !== newStatus) {\r\n      dispatch(setStatusAction(newStatus));\r\n    }\r\n  };\r\n\r\n  const cls = [classes.Field, classes['Field-' + level]];\r\n\r\n  return (\r\n    <div className={cls.join(' ')}>\r\n      {\r\n        cells.map(\r\n          cell => <Cell\r\n            key={cell.id}\r\n            cell={cell}\r\n            status={status}\r\n            onCellMouseDown={onCellMouseDown}\r\n            onCellMouseUp={onCellMouseUp}\r\n            onCellClick={onCellClick}\r\n          />\r\n        )\r\n      }\r\n    </div>\r\n  );\r\n};","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { LevelSelector } from '../LevelSelector/LevelSelector';\r\nimport { TopBar } from '../TopBar/TopBar';\r\nimport { Field } from '../Field/Field';\r\nimport classes from './App.module.css';\r\n\r\nfunction App() {\r\n  const level = useSelector(state => state.level);\r\n\r\n  const cls = [classes.container, classes['container-' + level]];\r\n\r\n  return (\r\n    <div className={cls.join(' ')}>\r\n      <TopBar />\r\n      <Field />\r\n      <LevelSelector />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { createStore } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport { rootReducer } from './reducers/rootReducer';\r\nimport { initialState } from './functions';\r\n\r\nconst store = createStore(rootReducer, initialState());\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>\r\n  , document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import { FLAG_CELL, LEVELS, OPEN_CELLS, PRESS_CELLS, RESET_GAME, SET_STATUS, STATUS_NEW } from '../consts';\r\nimport { initialCells } from '../functions';\r\n\r\nexport const rootReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case RESET_GAME:\r\n      return {\r\n        ...state,\r\n        level: action.payload,\r\n        status: STATUS_NEW,\r\n        cells: initialCells(LEVELS[action.payload]),\r\n      };\r\n    case SET_STATUS:\r\n      return {\r\n        ...state,\r\n        status: action.payload,\r\n      };\r\n    case FLAG_CELL:\r\n      return {\r\n        ...state,\r\n        cells: state.cells.map(\r\n          cell => cell.id === action.payload\r\n            ? {\r\n              ...cell,\r\n              isFlag: !cell.isFlag,\r\n            }\r\n            : cell\r\n        ),\r\n      };\r\n    case OPEN_CELLS:\r\n      return {\r\n        ...state,\r\n        cells: state.cells.map(\r\n          cell => -1 !== action.payload.indexOf(cell.id)\r\n            ? {\r\n              ...cell,\r\n              isOpen: true,\r\n            }\r\n            : cell\r\n        ),\r\n      };\r\n    case PRESS_CELLS:\r\n      return {\r\n        ...state,\r\n        cells: state.cells.map(\r\n          cell => -1 !== action.payload.indexOf(cell.id)\r\n            ? {\r\n              ...cell,\r\n              isPressed: !cell.isPressed,\r\n            }\r\n            : cell\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};"],"sourceRoot":""}